name: Unit Test 

on:
  workflow_dispatch:

env: 
  conda_env: ligandmpnn

jobs:
  BareTests:
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - windows-latest
          - macos-14
          - macos-13
        python-version: 
          - "3.9"
          - "3.10"
          - "3.11"

    runs-on: ${{ matrix.os }}

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      
      - name: Setup Conda on ${{ matrix.os }}
        uses: conda-incubator/setup-miniconda@v3
        if: matrix.os != 'macos-14'
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            auto-update-conda: false
            activate-environment: ${{ env.conda_env }}
            auto-activate-base: false
            python-version: ${{ matrix.python-version }}
      
      - name: Setup Conda on macos-latest
        uses: conda-incubator/setup-miniconda@v3
        if: matrix.os == 'macos-14'
        with:
            installer-url: https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Mambaforge-24.3.0-0-MacOSX-arm64.sh
            auto-update-conda: false
            activate-environment: ${{ env.conda_env }}
            auto-activate-base: false
            python-version: ${{ matrix.python-version }}
      
      - name: Setup PyMOL on ${{ matrix.os }} - py${{ matrix.python-version }}
        run: |
          conda install -c conda-forge openmm pdbfixer -n ${{ env.conda_env }} -y 
          conda info
          conda list
          which python
          which python3
      - name: Install LigandMPNN on ${{ matrix.os }}
        run: |
          pip install .
          pip install .[openfold]

      - name: Full Unit Test on Ubuntu
        run: |
          bash ./run_examples.sh
          bash ./score_examples.sh
          bash ./sc_examples.sh

      